#!/bin/bash

hc() {
  #herbstclient "$@"
  cmds="$cmds ^ $@"
}

hc emit_hook reload

# remove all existing input binds
hc keyunbind --all
hc mouseunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier
myTerm=$TERMINAL
myFM=dolphin

# rofi
hc keybind $Mod-d spawn $HOME/.config/rofi/launcher

# file manager
hc keybind $Mod-a spawn $myFM

# settings
hc keybind $Mod-Shift-period                spawn systemsettings5

# media keys
#hc keybind XF86MonBrightnessDown            spawn  light -U 5
#hc keybind XF86MonBrightnessUp              spawn  light -A 5
#hc keybind XF86AudioMute                    spawn  pulsemixer --toggle-mute
#hc keybind XF86AudioLowerVolume             spawn  pulsemixer --change-volume -2
#hc keybind XF86AudioRaiseVolume             spawn  pulsemixer --change-volume +2

# spotify
#hc keybind XF86AudioPlay                    spawn  playerctl play-pause
#hc keybind XF86AudioPrev                    spawn  playerctl previous
#hc keybind XF86AudioNext                    spawn  playerctl next

# screenshot
#hc keybind Print                            spawn  spectacle
#hc keybind Shift-Print                      spawn  sh -c "maim -i $(herbstclient attr clients.focus | grep winid | cut -d '"' -f2) --format png /dev/stdout | xclip -selection clipboard -t image/png && notify-send 'Screenshot copied to clipboard.'"
#hc keybind Control-Print                     and , spawn sh -c "maim --format png /dev/stdout | xclip -selection clipboard -t image/png" , spawn sh -c "notify-send 'Screenshot copied to clipboard.'"
#hc keybind Control-Shift-Print               and , spawn sh -c "maim -s --format png /dev/stdout | xclip -selection clipboard -t image/png" , spawn sh -c "notify-send 'Screenshot copied to clipboard.'"
#hc keybind Shift-Print                      spawn spectacle -r
#hc keybind Control-Print                    spawn spectacle -fbc
#hc keybind Control-Shift-Print              spawn spectacle -rbc

# session
hc keybind $Mod-Shift-e                     spawn  $HOME/.config/rofi/session.sh
hc keybind $Mod-Shift-r                     reload
hc keybind $Mod-q                           chain , close , emit_hook focus_window
hc keybind $Mod-c                           spawn  switch-colors --prompt
hc keybind Control-space                    spawn  $HOME/.config/rofi/prompt.sh
hc keybind $Mod-Return                      chain , emit_hook focus_frame , spawn $myTerm
hc keybind $Mod-Alt-l                    spawn  locker
hc keybind Control-Alt-Return               spawn  $HOME/.config/rofi/session.sh

savelayout() {
    for tag in $(herbstclient  tag_status | grep -o '[[:digit:]]' | xargs -n1); do
        printf '%s: ' "$tag" >> $HOME/.config/herbsluftwm/layout
        herbstclient dump "$tag" >> $HOME/.config/herbsluftwm/layout
    done
}

hc keybind $Mod-Shift-s           spawn  sh -c "$HOME/.config/herbstluftwm/savestate.sh > $HOME/.config/herbstluftwm/layout"

# basic movement
# focusing clients
hc keybind $Mod-h                           focus  left
hc keybind $Mod-j                           focus  down
hc keybind $Mod-k                           focus  up
hc keybind $Mod-l                           focus  right
hc keybind $Mod-Left                        focus  left
hc keybind $Mod-Down                        focus  down
hc keybind $Mod-Up                          focus  up
hc keybind $Mod-Right                       focus  right


# moving clients
hc keybind $Mod-Shift-h                     shift  left
hc keybind $Mod-Shift-j                     shift  down
hc keybind $Mod-Shift-k                     shift  up
hc keybind $Mod-Shift-l                     shift  right
hc keybind $Mod-Shift-Left                  shift  left
hc keybind $Mod-Shift-Down                  shift  down
hc keybind $Mod-Shift-Up                    shift  up
hc keybind $Mod-Shift-Right                 shift  right


# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u                           chain , split bottom 0.5 , focus bottom
hc keybind $Mod-o                           chain , split right 0.5 , focus right
hc keybind $Mod-Shift-u                     chain , split top 0.5 , focus top
hc keybind $Mod-Shift-o                     chain , split left 0.5 , focus left

# let the current frame explode into subframes
hc keybind $Mod-space                       and , split explode , or . focus right . focus down

# resizing frames
resizestep=0.01
hc keybind $Mod-Control-h                  resize  left  +$resizestep
hc keybind $Mod-Control-j                  resize  down  +$resizestep
hc keybind $Mod-Control-k                  resize  up    +$resizestep
hc keybind $Mod-Control-l                  resize  right +$resizestep
hc keybind $Mod-Control-Left               resize  left  +$resizestep
hc keybind $Mod-Control-Down               resize  down  +$resizestep
hc keybind $Mod-Control-Up                 resize  up    +$resizestep
hc keybind $Mod-Control-Right              resize  right +$resizestep


resizestep=$(echo "$resizestep * 4" | bc)
hc keybind $Mod-Control-Shift-h            resize  left  +$resizestep
hc keybind $Mod-Control-Shift-j            resize  down  +$resizestep
hc keybind $Mod-Control-Shift-k            resize  up    +$resizestep
hc keybind $Mod-Control-Shift-l            resize  right +$resizestep
hc keybind $Mod-Control-Shift-Left         resize  left  +$resizestep
hc keybind $Mod-Control-Shift-Down         resize  down  +$resizestep
hc keybind $Mod-Control-Shift-Up           resize  up    +$resizestep
hc keybind $Mod-Control-Shift-Right        resize  right +$resizestep


# tags
tag_names=( {1..8} )
#tag_names=( www dev chat pdf uni ph misc )
tag_keys=( {1..8} 0)

# load layout
#$HOME/.config/herbstluftwm/loadstate.sh < $HOME/.config/herbstluftwm/layout

hc set default_frame_layout 3

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
  hc add "${tag_names[$i]}"
  key="${tag_keys[$i]}"
  if ! [ -z "$key" ] ; then
    hc keybind "$Mod-$key" use_index "$i"
    hc keybind "$Mod-Shift-$key" move_index "$i"
  fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layout control
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
hc keybind $Mod-g set_layout grid
hc keybind $Mod-m set_layout max
hc keybind $Mod-v set_layout vertical
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Control-space \
  or , and . compare tags.focus.curframe_wcount = 2 \
  . cycle_layout +1 max vertical horizontal grid \
  , cycle_layout +1

hc keybind $Mod-Control-Shift-space \
  or , and . compare tags.focus.curframe_wcount = 2 \
  . cycle_layout -1 max vertical horizontal grid \
  , cycle_layout -1

# mouse
hc mousebind $Mod-Button1           move
hc mousebind $Mod-Button2           zoom
hc mousebind Shift-Button1          resize

# focus
hc keybind $Mod-BackSpace           cycle_monitor +1
hc keybind $Mod-Shift-BackSpace     cycle_monitor -1
hc keybind $Mod-Tab                 cycle         +1
hc keybind $Mod-Shift-Tab           cycle         -1
hc keybind $Mod-Control-Tab         cycle_frame   +1
hc keybind $Mod-Shift-Control-Tab   cycle_frame   -1
hc keybind $Mod-i                   jumpto urgent


# theme
hc attr theme.reset                     1
hc set  frame_border_width              0
hc set  always_show_frame               0
hc set  frame_bg_transparent            1
hc set  frame_transparent_width         0
hc set  frame_gap                       ${xrdb:style.frame_gap}
hc set  frame_padding                   ${xrdb:style.frame_gap}
hc set  window_gap                      ${xrdb:style.window_gap}
hc set  smart_window_surroundings       0
hc set  smart_frame_surroundings        1
hc set  mouse_recenter_gap              0
hc set  swap_monitors_to_get_tag        0
hc attr theme.inner_width               0
hc attr theme.floating.outer_width      0
hc attr theme.border_width              ${xrdb:style.frame_width}
hc attr theme.floating.border_width     ${xrdb:style.frame_width}
hc attr theme.normal.color              "${xrdb:color0}"
hc attr theme.active.color              "${xrdb:color1}"
hc attr theme.urgent.color              "${xrdb:foreground}"
hc attr theme.floating.normal.color     "${xrdb:color0}"
hc attr theme.floating.active.color     "${xrdb:color1}"


# clear all rules
hc unrule -F

# generic rules
hc rule focus=on                                                       # normally focus new clients
hc rule switchtag=on
hc rule floatplacement=smart
hc rule ewmhnotify=on                                                 # don't notify clients that they've been fullscreened
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)'       pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG'                        focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)'   manage=off
hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm.*|Konsole)'                      focus=on
hc rule class~'[Vv]iewnior'                                            floating=on floatplacement=center
hc rule class~'[Ss]xiv'                                                floating=on floatplacement=center
hc rule class~'.*NautilusPrevier.*'                                    floating=on floatplacement=center
hc rule instance~'[Pp]laces'                                           floating=on floatplacement=center
hc rule title~'Emoji.*Selector'                                        floating=on floatplacement=center
hc rule class~'[Zz]athura' index=1
#hc rule class='TelegramDesktop' title="Media viewer"

# kde plasma rules
hc rule title='Plasma'                                                 floating=on manage=on floatplacement=none
hc rule class='plasmashell'                                            floating=on floatplacement=none
hc rule title~'Desktop.*Plasma'                                        floating=on floatplacement=none
hc rule title='plasma-desktop'                                         floating=on
hc rule title='win7'                                                   floating=on
hc rule class='krunner'                                                floating=on
hc rule class='Kmix'                                                   floating=on
hc rule class='Klipper'                                                floating=on
hc rule class='Plasmoidviewer'                                         floating=on manage=off
hc rule class='plasmawindowed'                                         floating=on manage=off
hc rule class='plasmashell'                                            windowtype='_NET_WM_WINDOW_TYPE_NOTIFICATION' floating=on focus=off switchtag=off floatplacement=none
hc rule class='plasmashell'                                            windowtype='_KDE_NET_WM_WINDOW_TYPE_ON_SCREEN_DISPLAY' floating=on focus=off switchtag=off floatplacement=none

# window->tag rules
hc rule class~'firefox'                                                tag='1' switchtag=on focus=on ewmhnotify=on floating=off
hc rule class~'[Cc]hrom.*'                                             tag='1' switchtag=on focus=on ewmhnotify=on
hc rule class='spotify'                                                tag='8' switchtag=off
hc rule class='TelegramDesktop'                                        tag='3' switchtag=on index=0
hc rule class='discord'                                                tag='8' switchtag=off
hc rule class~'[Mm]icrosoft.*[Tt]eams.*'                               tag='5' switchtag=off focus=off
hc rule class~'.*[Zz]athura'                                           tag='4' index=1


hc set tree_style '╾│ ├└╼─┐'
hc set focus_follows_mouse true
hc set update_dragged_clients 1
hc set focus_stealing_prevention 0

# unlock, just to be sure
hc unlock

hc attr settings.auto_detect_monitors true
hc attr settings.auto_detect_panels true
hc detect_monitors
#hc set_layout grid
#hc pad 0 36 0 0 0

# polybar height
#bar_border=$(grep "^border-size" $HOME/.config/polybar/config | awk '{print $3}')
#bar_height=$((( $(grep "^height" $HOME/.config/polybar/config | awk '{print $3}') + $bar_border * 2 )))
#
#hc pad 0 $padding $padding $(($bar_height+$padding)) $padding
#hc keybind $Mod-b spawn herbstluft_focus

hc detect_monitors
hc set auto_detect_monitors true
hc set mouse_recenter_gap 1

herbstclient chain $cmds&

#"$HOME/.config/herbstluftwm/read_hook" &
